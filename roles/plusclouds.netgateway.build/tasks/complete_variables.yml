- name: Find netgateways server in related datacenter node
  uri:
    url: "{{leo_url}}/v2/iaas/virtual-machines/{{ vm_id }}?type=system&fields=ip_addr,username,password&include=datacenterNode"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: netgateway_vm
  delegate_to: localhost

- debug:
    var: netgateway_vm
    
- name: Add host to group netservers
  add_host:
    args: "ssh-common-args='-o StrictHostKeyChecking=no'"
    name: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.ipList.data.0.ip_addr }}"
    groups: netgateway
    ansible_ssh_user: "{{ netgateway_vm.json.data.username }}"
    ansible_ssh_pass: "{{ netgateway_vm.json.data.password }}"
    vlan_ip_addr: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.gateway }}"
    vlan_netmask: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.netmask }}"
    vlan_subnet: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.subnet }}"
    vlan_ip: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_addr }}"
    vlan_broadcast: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.network }}"
    vlan_gateway: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.gateway }}"
    vlan_start_ip_range: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_range_start }}"
    vlan_end_ip_range: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_range_end }}"
    vlan_network: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_addr }}{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.subnet }}"
    node_name: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.ipList.data.0.ip_addr }}"
    public_ip_addr: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.ipList.data.0.ip_addr }}"
    public_netmask: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.network.data.netmask }}"
    public_gateway: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.network.data.gateway }}"
    network: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.id }}"
    username: "{{ netgateway_vm.json.data.username }}"
    server_name: "{{ server_name }}"
    vm_id: "{{ vm_id }}"
    netgateway: "{{ netgateway_id }}"

- set_fact:
    vlan_ip_addr: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.gateway }}"
    vlan_netmask: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.netmask }}"
    vlan_subnet: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.subnet }}"
    vlan_ip: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_addr }}"
    vlan_broadcast: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.network }}"
    vlan_gateway: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.gateway }}"
    vlan_start_ip_range: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_range_start }}"
    vlan_end_ip_range: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_range_end }}"
    vlan_network: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.ip_addr }}{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.subnet }}"
    node_name: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.ipList.data.0.ip_addr }}"
    public_ip_addr: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.ipList.data.0.ip_addr }}"
    public_netmask: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.network.data.netmask }}"
    public_gateway: "{{ netgateway_vm.json.data.virtualNetworkCards.data.0.network.data.gateway }}"
    network: "{{ netgateway_vm.json.data.virtualNetworkCards.data.1.network.data.id }}"
    username: "{{ netgateway_vm.json.data.username }}"
    server_name: "{{ server_name }}"
    vm_id: "{{ vm_id }}"
    netgateway: "{{ netgateway_id }}"

- name: accept new ssh fingerprints
  shell: ssh-keyscan -H {{ public_ip_addr }} >> ~/.ssh/known_hosts
  with_items: ec2.instances